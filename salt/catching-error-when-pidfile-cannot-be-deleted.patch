From 44b82746d4e00810cd2eb13f3940f257ae4e354a Mon Sep 17 00:00:00 2001
From: Jochen Breuer <jbreuer@suse.de>
Date: Wed, 6 Sep 2017 10:16:51 +0200
Subject: [PATCH] Catching error when PIDfile cannot be deleted

Usually the PIDfile is locate in /run. If Salt is not started with root
permissions, it is not able to delete the PIDfile in /run. It should
be safe to just ignore this error, since Salt overwrites the PIDfile on
the next start.
---
 salt/utils/parsers.py            |  9 ++++-----
 tests/unit/utils/test_parsers.py | 30 +++++++++++++++++++-----------
 2 files changed, 23 insertions(+), 16 deletions(-)

diff --git a/salt/utils/parsers.py b/salt/utils/parsers.py
index 09fe7d880e..e5c284c115 100644
--- a/salt/utils/parsers.py
+++ b/salt/utils/parsers.py
@@ -973,11 +973,10 @@ class DaemonMixIn(six.with_metaclass(MixInMeta, object)):
                 try:
                     os.unlink(self.config['pidfile'])
                 except OSError as err:
-                    logging.getLogger(__name__).info(
-                        'PIDfile could not be deleted: {0}'.format(
-                            self.config['pidfile']
-                        )
-                    )
+                    # This happens when running salt-master as a non-root user
+                    # and can be ignored, since salt-master is able to
+                    # overwrite the PIDfile on the next start.
+                    pass
 
     def set_pidfile(self):
         from salt.utils.process import set_pidfile
diff --git a/tests/unit/utils/test_parsers.py b/tests/unit/utils/test_parsers.py
index 4fc85b7a5b..bb5912015d 100644
--- a/tests/unit/utils/test_parsers.py
+++ b/tests/unit/utils/test_parsers.py
@@ -1027,17 +1027,25 @@ class DaemonMixInTestCase(TestCase):
                     assert mock_logger.call_count == 0
                     assert os_unlink.call_count == 1
 
-    def test_pid_file_deletion_with_oserror(self):
-        '''
-        PIDfile deletion with exception
-        '''
-        with patch('os.unlink', MagicMock(side_effect=OSError())) as os_unlink:
-            with patch('os.path.isfile', MagicMock(return_value=True)):
-                with patch.object(self.logger, 'info') as mock_logger:
-                    self.mixin._mixin_before_exit()
-                    assert os_unlink.call_count == 1
-                    mock_logger.assert_called_with(
-                        'PIDfile could not be deleted: {0}'.format(self.pid))
 
 # Hide the class from unittest framework when it searches for TestCase classes in the module
 del LogSettingsParserTests
+
+
+if __name__ == '__main__':
+    from integration import run_tests  # pylint: disable=import-error,wrong-import-position
+    run_tests(MasterOptionParserTestCase,
+              MinionOptionParserTestCase,
+              ProxyMinionOptionParserTestCase,
+              SyndicOptionParserTestCase,
+              SaltCMDOptionParserTestCase,
+              SaltCPOptionParserTestCase,
+              SaltKeyOptionParserTestCase,
+              SaltCallOptionParserTestCase,
+              SaltRunOptionParserTestCase,
+              SaltSSHOptionParserTestCase,
+              SaltCloudParserTestCase,
+              SPMParserTestCase,
+              SaltAPIParserTestCase,
+              DaemonMixInTestCase,
+              needs_daemon=False)
-- 
2.16.1


